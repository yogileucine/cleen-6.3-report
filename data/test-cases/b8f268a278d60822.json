{"uid":"b8f268a278d60822","name":"Validate the audit logs details for when created new study from protocol","fullName":"tests.scenarios.audit_logs.test_audit_logs_scenarios.TestAuditLogsScenarios#test_validate_create_new_study_audit_logs_details","historyId":"18e29c7208e54f6c7561efd9d8fbc8f5","time":{"start":1734439049934,"stop":1734439078684,"duration":28750},"description":"This test case test API to validate the audit logs details for when created new study from protocol","descriptionHtml":"<p>This test case test API to validate the audit logs details for when created new study from protocol</p>\n","status":"failed","statusMessage":"AssertionError: Logs value is not as expected. Expected: User created an On Demand Study (ID: STUDY-DEC24-82), Actual: User created an On Demand Study (ID: STUDY-DEC24-82) With equipments Vibratory Sifter (EQG-01 (V. Sifter)), Scoop (EQM-16), Scoop (EQM-17), Tablet deduster & metal detector (EQM-19)\nassert 'User created...ctor (EQM-19)' == 'User created...UDY-DEC24-82)'\n  - User created an On Demand Study (ID: STUDY-DEC24-82)\n  + User created an On Demand Study (ID: STUDY-DEC24-82) With equipments Vibratory Sifter (EQG-01 (V. Sifter)), Scoop (EQM-16), Scoop (EQM-17), Tablet deduster & metal detector (EQM-19)","statusTrace":"self = <test_audit_logs_scenarios.TestAuditLogsScenarios object at 0x7f81c47ea750>\n\n    @allure.title(\"Validate the audit logs details for when created new study from protocol\")\n    @allure.description(\"This test case test API to validate the audit logs details for when created new study \"\n                        \"from protocol\")\n    @allure.link(\"https://app.clickup.com/t/86cw1cqby\")\n    @pytest.mark.validate_create_new_study_audit_logs_details\n    def test_validate_create_new_study_audit_logs_details(self):\n        study_details = self.study_multi_production_protocol.test_create_study_from_protocol()\n        study_details = json.loads(study_details)[\"result\"]\n        time_stamp = datetime.utcnow().isoformat()\n    \n        expected_audit_log_msg = f\"User created an On Demand Study (ID: {study_details['externalId']})\"\n    \n        audit_logs_details = self.validate_audit_logs.audit_logs_details(policy_name=\"OnDemandStudy\",\n                                                                         action=const.LOG_ACTION_ADD)\n    \n        for index, result in enumerate(audit_logs_details.get(\"audit_logs\", {}).get(\"result\", [])):\n            response_time_stamp = result.get(\"timestamp\")\n            action_exists = result.get(\"action\") is not None\n            domain_is_additional_policy = result.get(\"domain\") == \"OnDemandStudy\"\n            actual_audit_log_msg = result.get(\"details\", {}).get(\"details\")\n    \n            if action_exists and domain_is_additional_policy:\n>               self.validate_audit_logs.validate_message(actual_audit_log_msg, expected_audit_log_msg)\n\ntests/scenarios/audit_logs/test_audit_logs_scenarios.py:1984: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nlogs_value = 'User created an On Demand Study (ID: STUDY-DEC24-82) With equipments Vibratory Sifter (EQG-01 (V. Sifter)), Scoop (EQM-16), Scoop (EQM-17), Tablet deduster & metal detector (EQM-19)'\nexpected_value = 'User created an On Demand Study (ID: STUDY-DEC24-82)'\n\n    @staticmethod\n    def validate_message(logs_value, expected_value):\n>       assert logs_value == expected_value, (f\"Logs value is not as expected. Expected: {expected_value}, \"\n                                              f\"Actual: {logs_value}\")\nE       AssertionError: Logs value is not as expected. Expected: User created an On Demand Study (ID: STUDY-DEC24-82), Actual: User created an On Demand Study (ID: STUDY-DEC24-82) With equipments Vibratory Sifter (EQG-01 (V. Sifter)), Scoop (EQM-16), Scoop (EQM-17), Tablet deduster & metal detector (EQM-19)\nE       assert 'User created...ctor (EQM-19)' == 'User created...UDY-DEC24-82)'\nE         - User created an On Demand Study (ID: STUDY-DEC24-82)\nE         + User created an On Demand Study (ID: STUDY-DEC24-82) With equipments Vibratory Sifter (EQG-01 (V. Sifter)), Scoop (EQM-16), Scoop (EQM-17), Tablet deduster & metal detector (EQM-19)\n\ntests/unit/audit_logs/test_audit_logs.py:381: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1734429604694,"stop":1734429605014,"duration":320},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1734429605014,"stop":1734429605194,"duration":180},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"validate_create_new_study_audit_logs_details"},{"name":"tag","value":"run(order=-2)"},{"name":"tag","value":"second_to_last"},{"name":"tag","value":"audit_logs_scenarios"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.audit_logs"},{"name":"suite","value":"test_audit_logs_scenarios"},{"name":"subSuite","value":"TestAuditLogsScenarios"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"1892009-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.audit_logs.test_audit_logs_scenarios"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cw1cqby","url":"https://app.clickup.com/t/86cw1cqby","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["validate_create_new_study_audit_logs_details","scenario","audit_logs_scenarios","second_to_last","run(order=-2)"]},"source":"b8f268a278d60822.json","parameterValues":[]}