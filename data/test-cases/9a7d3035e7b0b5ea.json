{"uid":"9a7d3035e7b0b5ea","name":"Validate the audit logs details for update product details from master data","fullName":"tests.scenarios.audit_logs.test_audit_logs_scenarios.TestAuditLogsScenarios#test_validate_updated_master_data_product_audit_logs_details","historyId":"aacf38123335a43b77a2d8d29c33f07b","time":{"start":1732990046847,"stop":1732990047899,"duration":1052},"description":"This test case test API to Validate the audit logs details for update product details from master data","descriptionHtml":"<p>This test case test API to Validate the audit logs details for update product details from master data</p>\n","status":"failed","statusMessage":"AssertionError: Expected '9 mg' for old Strength (Active-Auto-57P71), but got None\nassert None == '9 mg'","statusTrace":"self = <test_audit_logs_scenarios.TestAuditLogsScenarios object at 0x000002E5E6989E10>\n\n    @allure.title(\"Validate the audit logs details for update product details from master data\")\n    @allure.description(\"This test case test API to Validate the audit logs details for update product details from \"\n                        \"master data\")\n    @allure.link(\"https://app.clickup.com/t/86cvyv21d\")\n    @pytest.mark.validate_updated_master_data_product_audit_logs_details\n    def test_validate_updated_master_data_product_audit_logs_details(self):\n        add_product = self.master_data_products.test_add_product_master_data_details()\n        old_product_detail = add_product[\"payload\"]\n        active_name = add_product[\"active_name\"]\n        old_ldd = old_product_detail[\"ldd\"]\n        old_table_weight = old_product_detail[\"tabletWeight\"]\n        old_strength = old_product_detail[\"apis\"][0][\"strength\"]\n    \n        data = {\"active_id\": old_product_detail[\"apis\"][0][\"id\"], \"product_id\": old_product_detail[\"product_id\"],\n                \"product_name\": old_product_detail[\"name\"]}\n    \n        update_product = self.master_data_products.test_update_product_master_data_details(data)\n        master_data_detail = update_product[\"payload\"]\n        time_stamp = update_product[\"timestamp\"]\n        table_weight = master_data_detail['tabletWeight']\n        ldd = master_data_detail['ldd']\n        strength = master_data_detail['apis'][0]['strength']\n    \n        audit_logs_details = self.validate_audit_logs.audit_logs_details(policy_name=\"Product\",\n                                                                         action=const.LOG_ACTION_ADD)\n    \n        for index, result in enumerate(audit_logs_details.get(\"audit_logs\", {}).get(\"result\", [])):\n            response_time_stamp = result.get(\"timestamp\")\n            action_exists = result.get(\"action\") is not None\n            domain_is_additional_policy = result.get(\"domain\") == \"Product\"\n            audit_diff = result.get(\"diff\", {})\n    \n            if action_exists and domain_is_additional_policy:\n                self.validate_audit_logs.assert_audit_diff(audit_diff, \"Ldd\", str(old_ldd[\"value\"]) + \" \" + ldd[\"unit\"],\n                                                           str(ldd[\"value\"]) + \" \" + ldd[\"unit\"])\n                self.validate_audit_logs.assert_audit_diff(audit_diff, \"Unit Weight\",\n                                                           str(old_table_weight[\"value\"]) + \" \" + old_table_weight[\n                                                               \"unit\"],\n                                                           str(table_weight[\"value\"]) + \" \" + table_weight[\"unit\"])\n>               self.validate_audit_logs.assert_audit_diff(audit_diff, f\"Strength ({active_name})\",\n                                                           str(old_strength[\"value\"]) + \" \" + old_strength[\"unit\"],\n                                                           str(strength[\"value\"]) + \" \" + strength[\"unit\"])\n\ntests\\scenarios\\audit_logs\\test_audit_logs_scenarios.py:1093: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\naudit_diff = {'Apis': {'type': 'unchanged'}, 'Cleanability AF': {'type': 'unchanged'}, 'Formulation AF': {'type': 'unchanged'}, 'ID': {'data': {'new': {'value': 'product_id-62W7F'}, 'old': {'value': 'product_id-62W7F'}}, 'type': 'updated'}, ...}\nkey = 'Strength (Active-Auto-57P71)', expected_old_value = '9 mg', expected_new_value = '9 mg'\n\n    @staticmethod\n    def assert_audit_diff(audit_diff, key, expected_old_value, expected_new_value):\n        old_value = audit_diff.get(key, {}).get(\"data\", {}).get(\"old\", {}).get(\"value\")\n        new_value = audit_diff.get(key, {}).get(\"data\", {}).get(\"new\", {}).get(\"value\")\n    \n>       assert old_value == expected_old_value, f\"Expected '{expected_old_value}' for old {key}, but got {old_value}\"\nE       AssertionError: Expected '9 mg' for old Strength (Active-Auto-57P71), but got None\nE       assert None == '9 mg'\n\ntests\\unit\\audit_logs\\test_audit_logs.py:128: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1732990046192,"stop":1732990046612,"duration":420},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1732990046612,"stop":1732990046847,"duration":235},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"validate_updated_master_data_product_audit_logs_details"},{"name":"tag","value":"run(order=-2)"},{"name":"tag","value":"second_to_last"},{"name":"tag","value":"audit_logs_scenarios"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.audit_logs"},{"name":"suite","value":"test_audit_logs_scenarios"},{"name":"subSuite","value":"TestAuditLogsScenarios"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"10636-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.audit_logs.test_audit_logs_scenarios"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cvyv21d","url":"https://app.clickup.com/t/86cvyv21d","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["scenario","validate_updated_master_data_product_audit_logs_details","audit_logs_scenarios","second_to_last","run(order=-2)"]},"source":"9a7d3035e7b0b5ea.json","parameterValues":[]}