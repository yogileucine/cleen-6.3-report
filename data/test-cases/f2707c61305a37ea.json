{"uid":"f2707c61305a37ea","name":"Validate the audit logs details for when add new inspection run to study","fullName":"tests.scenarios.audit_logs.test_audit_logs_scenarios.TestAuditLogsScenarios#test_validate_add_new_study_inspection_audit_logs_details","historyId":"3db1834f56b04da504dd809555dee981","time":{"start":1734439078798,"stop":1734439227368,"duration":148570},"description":"This test case test API to validate the audit logs details for when add new inspection run to study","descriptionHtml":"<p>This test case test API to validate the audit logs details for when add new inspection run to study</p>\n","status":"failed","statusMessage":"AssertionError: Expected '2024-12-17 12:40:27.085569', but got '2024-12-17 12:38:59.526000', the difference '0:01:27.559569' is more than the tolerance '0:01:00'\nassert datetime.timedelta(seconds=87, microseconds=559569) <= datetime.timedelta(seconds=60)","statusTrace":"self = <test_audit_logs_scenarios.TestAuditLogsScenarios object at 0x7f81c3d17aa0>\n\n    @allure.title(\"Validate the audit logs details for when add new inspection run to study\")\n    @allure.description(\n        \"This test case test API to validate the audit logs details for when add new inspection run to \"\n        \"study\")\n    @allure.link(\"https://app.clickup.com/t/86cw1qr9z\")\n    @pytest.mark.validate_add_new_study_inspection_audit_logs_details\n    def test_validate_add_new_study_inspection_audit_logs_details(self):\n        inspection = self.inspection_multi_production_protocol.test_create_inspection_validate_the_acceptance_limit_active(\n            self.inspection_multi_production_protocol.inspection_setup())\n        time_stamp = datetime.utcnow().isoformat()\n    \n        expected_audit_log_msg = (\n            f\"User created an Inspection (ID: {inspection['inspection_external_id']}) as part of \"\n            f\"On Demand Study (ID: {inspection['study_external_id']})\")\n    \n        audit_logs_details = self.validate_audit_logs.audit_logs_details(policy_name=\"OnDemandInspection\",\n                                                                         action=const.LOG_ACTION_ADD)\n    \n        for index, result in enumerate(audit_logs_details.get(\"audit_logs\", {}).get(\"result\", [])):\n            response_time_stamp = result.get(\"timestamp\")\n            action_exists = result.get(\"action\") is not None\n            domain_is_additional_policy = result.get(\"domain\") == \"OnDemandInspection\"\n            actual_audit_log_msg = result.get(\"details\", {}).get(\"details\")\n    \n            if action_exists and domain_is_additional_policy:\n                self.validate_audit_logs.validate_message(actual_audit_log_msg, expected_audit_log_msg)\n>               self.validate_audit_logs.updated_policy_time_stamp(time_stamp, response_time_stamp)\n\ntests/scenarios/audit_logs/test_audit_logs_scenarios.py:2014: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests/unit/audit_logs/test_audit_logs.py:143: in updated_policy_time_stamp\n    self.get_diff_time_stamp(time_stamp, response_time_stamp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntime_stamp = datetime.datetime(2024, 12, 17, 12, 40, 27, 85569), response_time_stamp = datetime.datetime(2024, 12, 17, 12, 38, 59, 526000)\n\n    @staticmethod\n    def get_diff_time_stamp(time_stamp, response_time_stamp):\n        # Define the tolerance (for example, 1 minute)\n        tolerance = timedelta(minutes=1)\n    \n        # Calculate the absolute difference between the two timestamps\n        time_difference = abs(response_time_stamp - time_stamp)\n    \n>       assert time_difference <= tolerance, (f\"Expected '{time_stamp}', but got '{response_time_stamp}', \"\n                                              f\"the difference '{time_difference}' is more than the \"\n                                              f\"tolerance '{tolerance}'\")\nE       AssertionError: Expected '2024-12-17 12:40:27.085569', but got '2024-12-17 12:38:59.526000', the difference '0:01:27.559569' is more than the tolerance '0:01:00'\nE       assert datetime.timedelta(seconds=87, microseconds=559569) <= datetime.timedelta(seconds=60)\n\ntests/unit/audit_logs/test_audit_logs.py:153: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1734429604694,"stop":1734429605014,"duration":320},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1734429605014,"stop":1734429605194,"duration":180},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"validate_add_new_study_inspection_audit_logs_details"},{"name":"tag","value":"run(order=-2)"},{"name":"tag","value":"second_to_last"},{"name":"tag","value":"audit_logs_scenarios"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.audit_logs"},{"name":"suite","value":"test_audit_logs_scenarios"},{"name":"subSuite","value":"TestAuditLogsScenarios"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"1892009-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.audit_logs.test_audit_logs_scenarios"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cw1qr9z","url":"https://app.clickup.com/t/86cw1qr9z","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["validate_add_new_study_inspection_audit_logs_details","scenario","audit_logs_scenarios","second_to_last","run(order=-2)"]},"source":"f2707c61305a37ea.json","parameterValues":[]}