{"uid":"7a03e22986269af7","name":"Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when select zero in microbial policy for swab & non split","fullName":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol#test_validate_bioburden_residue_swab_limits_absent_zero_non_split_inspection","historyId":"70938d53a0409398c4a6829f9e31e4af","time":{"start":1732984019092,"stop":1732984030847,"duration":11755},"description":"This test case tests API to Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when select zero in microbial policy for swab & non split","descriptionHtml":"<p>This test case tests API to Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when select zero in microbial policy for swab &amp; non split</p>\n","status":"broken","statusMessage":"KeyError: 'study_equipments'","statusTrace":"self = <test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol object at 0x000001CD084D8E90>\n\n    @allure.title(\"Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when \"\n                  \"select zero in microbial policy for swab & non split\")\n    @allure.description(\n        \"This test case tests API to Validate the absent on sample limits of Inspection bioburden Endotoxin \"\n        \"residue verification when select zero in microbial policy for swab & non split\")\n    @allure.link(\"https://app.clickup.com/t/86cuuz5ft\")\n    @pytest.mark.formulation  # bop = based on policy\n    @pytest.mark.validate_bioburden_residue_swab_limits_absent_zero_non_split_inspection\n    def test_validate_bioburden_residue_swab_limits_absent_zero_non_split_inspection(self):\n        protocol = self.test_validate_bioburden_endotoxin_residue_swab_sample_limits_absent_zero_non_split()\n    \n        protocol.update({\"inspection_type\": \"bioburden\", \"split_type\": \"non_split\"})\n    \n>       self.multi_production_inspection.compare_inspection_acceptance_limit_absent_zero(protocol)\n\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:1301: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\unit\\inspection_multi_production\\inspection_multi_production_protocol.py:884: in compare_inspection_acceptance_limit_absent_zero\n    inspection_data, equipment_info, protocol = self.create_inspection_on_study(protocol)\ntests\\unit\\inspection_multi_production\\inspection_multi_production_protocol.py:855: in create_inspection_on_study\n    protocol.update({\"create_study_from_protocol\": create_study_from_protocol(protocol)})\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = {'add_new_protocol_payload': {'authorId': 6, 'description': 'Automation Protocol', 'externalId': 'Protocol-1IBZ', 'nam...'81': {'additionalInfo': '', 'enabled': True, 'perUnitVolume': {'unit': 'ml', 'value': 6}, 'rinseLimit': 0}, ...}, ...}\n\n    def create_study_from_protocol(data):\n        n = 4\n        ca_name = ''.join(random.choices(string.ascii_uppercase + string.digits, k=n))\n        return {\n            \"protocolId\": data[\"protocol_id\"],\n            \"name\": \"Study-\" + ca_name,\n            \"reason\": \"Automation Test Study\",\n            \"authorId\": data[\"user_id\"],\n>           \"equipmentIds\": data[\"study_equipments\"]\n        }\nE       KeyError: 'study_equipments'\n\npayload\\facility\\protocol_payload\\on_demand_protocol_payload.py:629: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1732974915848,"stop":1732974916198,"duration":350},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1732974916198,"stop":1732974916326,"duration":128},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"validate_bioburden_residue_swab_limits_absent_zero_non_split_inspection"},{"name":"tag","value":"formulation"},{"name":"tag","value":"microbial_multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.multi_production_protocol.protocol"},{"name":"suite","value":"test_multi_production_protocol_microbial_policy_absent"},{"name":"subSuite","value":"TestMicrobialMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"22492-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cuuz5ft","url":"https://app.clickup.com/t/86cuuz5ft","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["validate_bioburden_residue_swab_limits_absent_zero_non_split_inspection","scenario","formulation","microbial_multi_production_protocol"]},"source":"7a03e22986269af7.json","parameterValues":[]}