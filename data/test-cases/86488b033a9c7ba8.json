{"uid":"86488b033a9c7ba8","name":"Validate the audit logs details for update auto selection policy","fullName":"tests.scenarios.audit_logs.test_audit_logs_scenarios.TestAuditLogsScenarios#test_validate_update_auto_selection_policy_audit_logs_details","historyId":"e82ae8df3ef0e1ffacd1ab76038c562b","time":{"start":1733050279018,"stop":1733050279193,"duration":175},"description":"This test case test API to validate the audit logs details for update auto selection policy","descriptionHtml":"<p>This test case test API to validate the audit logs details for update auto selection policy</p>\n","status":"failed","statusMessage":"AssertionError: Expected 'OR of the following criteria are met:1.  - Solubility is EqualTo Yes' for new Policy, but got OR of the following criteria are met:1.  of the following criteria are met:- Solubility is EqualTo Yes\nassert 'OR of the fo...s EqualTo Yes' == 'OR of the fo...s EqualTo Yes'\n  - OR of the following criteria are met:1.  - Solubility is EqualTo Yes\n  + OR of the following criteria are met:1.  of the following criteria are met:- Solubility is EqualTo Yes\n  ?                                          ++++++++++++++++++++++++++++++++++","statusTrace":"self = <test_audit_logs_scenarios.TestAuditLogsScenarios object at 0x00000280D205EC50>\n\n    @allure.title(\"Validate the audit logs details for update auto selection policy\")\n    @allure.description(\"This test case test API to validate the audit logs details for update auto selection policy\")\n    @allure.link(\"https://app.clickup.com/t/86cw0frup\")\n    @pytest.mark.validate_update_auto_selection_policy_audit_logs_details\n    def test_validate_update_auto_selection_policy_audit_logs_details(self):\n        selection_policy = self.sampling_location_assessment.test_update_auto_selection_policies()\n        time_stamp = selection_policy[\"timestamp\"]\n    \n        audit_logs_details = self.validate_audit_logs.audit_logs_details(policy_name=\"SamplingPolicy\",\n                                                                         action=const.LOG_ACTION_ADD)\n    \n        for index, result in enumerate(audit_logs_details.get(\"audit_logs\", {}).get(\"result\", [])):\n            response_time_stamp = result.get(\"timestamp\")\n            action_exists = result.get(\"action\") is not None\n            domain_is_additional_policy = result.get(\"domain\") == \"SamplingPolicy\"\n            audit_diff = result.get(\"diff\", {})\n    \n            if action_exists and domain_is_additional_policy:\n                self.validate_audit_logs.assert_audit_diff(audit_diff, \"Min Locations\", None, \"1\")\n>               self.validate_audit_logs.assert_audit_diff(audit_diff, \"Policy\", \"\", const.YES_NO_POLICY)\n\ntests\\scenarios\\audit_logs\\test_audit_logs_scenarios.py:2760: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\naudit_diff = {'ID': {'data': {'new': {'value': 'Indirect'}, 'old': {'value': 'Indirect'}}, 'type': 'updated'}, 'Min Locations': {'d...are met:1.  of the following criteria are met:- Solubility is EqualTo Yes'}, 'old': {'value': ''}}, 'type': 'updated'}}\nkey = 'Policy', expected_old_value = '', expected_new_value = 'OR of the following criteria are met:1.  - Solubility is EqualTo Yes'\n\n    @staticmethod\n    def assert_audit_diff(audit_diff, key, expected_old_value, expected_new_value):\n        old_value = audit_diff.get(key, {}).get(\"data\", {}).get(\"old\", {}).get(\"value\")\n        new_value = audit_diff.get(key, {}).get(\"data\", {}).get(\"new\", {}).get(\"value\")\n    \n        assert old_value == expected_old_value, f\"Expected '{expected_old_value}' for old {key}, but got {old_value}\"\n>       assert new_value == expected_new_value, f\"Expected '{expected_new_value}' for new {key}, but got {new_value}\"\nE       AssertionError: Expected 'OR of the following criteria are met:1.  - Solubility is EqualTo Yes' for new Policy, but got OR of the following criteria are met:1.  of the following criteria are met:- Solubility is EqualTo Yes\nE       assert 'OR of the fo...s EqualTo Yes' == 'OR of the fo...s EqualTo Yes'\nE         - OR of the following criteria are met:1.  - Solubility is EqualTo Yes\nE         + OR of the following criteria are met:1.  of the following criteria are met:- Solubility is EqualTo Yes\nE         ?                                          ++++++++++++++++++++++++++++++++++\n\ntests\\unit\\audit_logs\\test_audit_logs.py:129: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"login","time":{"start":1733050257392,"stop":1733050257678,"duration":286},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733050257678,"stop":1733050257885,"duration":207},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"validate_update_auto_selection_policy_audit_logs_details"},{"name":"tag","value":"run(order=-2)"},{"name":"tag","value":"second_to_last"},{"name":"tag","value":"audit_logs_scenarios"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.audit_logs"},{"name":"suite","value":"test_audit_logs_scenarios"},{"name":"subSuite","value":"TestAuditLogsScenarios"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"26520-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.audit_logs.test_audit_logs_scenarios"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cw0frup","url":"https://app.clickup.com/t/86cw0frup","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e0a4dddfb8d49d6e","status":"failed","statusDetails":"AssertionError: Expected 'OR of the following criteria are met:1.  - Solubility is EqualTo Yes' for new Policy, but got OR of the following criteria are met:1.  of the following criteria are met:- Solubility is EqualTo Yes\nassert 'OR of the fo...s EqualTo Yes' == 'OR of the fo...s EqualTo Yes'\n  - OR of the following criteria are met:1.  - Solubility is EqualTo Yes\n  + OR of the following criteria are met:1.  of the following criteria are met:- Solubility is EqualTo Yes\n  ?                                          ++++++++++++++++++++++++++++++++++","time":{"start":1733044500629,"stop":1733044500811,"duration":182}},{"uid":"1fda6825494a396b","status":"passed","time":{"start":1732985088625,"stop":1732985088836,"duration":211}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["validate_update_auto_selection_policy_audit_logs_details","scenario","audit_logs_scenarios","second_to_last","run(order=-2)"]},"source":"86488b033a9c7ba8.json","parameterValues":[]}