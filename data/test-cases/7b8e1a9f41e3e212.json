{"uid":"7b8e1a9f41e3e212","name":"Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when select zero in microbial policy for room grade swab & rinse & split","fullName":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol#test_validate_bioburden_residue_swab_rinse_limits_absent_zero_split_inspection_room_grade","historyId":"d1a1a2feb6792900ba0d1333e6d61e8f","time":{"start":1733032384407,"stop":1733032391327,"duration":6920},"description":"This test case tests API to Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when select zero in microbial policy for room grade swab & rinse & split","descriptionHtml":"<p>This test case tests API to Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when select zero in microbial policy for room grade swab &amp; rinse &amp; split</p>\n","status":"broken","statusMessage":"KeyError: 'protocol_eq'","statusTrace":"self = <test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol object at 0x000001E6DEB2C390>\n\n    @allure.title(\"Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when \"\n                  \"select zero in microbial policy for room grade swab & rinse & split\")\n    @allure.description(\n        \"This test case tests API to Validate the absent on sample limits of Inspection bioburden Endotoxin \"\n        \"residue verification when select zero in microbial policy for room grade swab & rinse & split\")\n    @allure.link(\"https://app.clickup.com/t/86cuw1eak\")\n    @pytest.mark.formulation\n    @pytest.mark.validate_bioburden_residue_swab_rinse_limits_absent_zero_split_inspection_room_grade\n    def test_validate_bioburden_residue_swab_rinse_limits_absent_zero_split_inspection_room_grade(self):\n>       protocol = self.test_bioburden_endotoxin_residue_swab_rinse_sample_limits_summary_absent_zero_split_room_grade()\n\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:2128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:2084: in test_bioburden_endotoxin_residue_swab_rinse_sample_limits_summary_absent_zero_split_room_grade\n    data = self.test_bioburden_endotoxin_absent_zero_swab_rinse_split_room_grade()\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:2048: in test_bioburden_endotoxin_absent_zero_swab_rinse_split_room_grade\n    data, updated_data = self.protocol_bioburden_split_helper(policy_data)\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:211: in protocol_bioburden_split_helper\n    equipments_id = self.protocol_common_method.get_protocol_equipments_ids(data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = {'add_new_protocol_payload': {'authorId': 6, 'description': 'Automation Protocol', 'externalId': 'Protocol-5Z54', 'name': 'Protocol-5Z54', ...}, 'bioburden_verification': True, 'description': 'Automation Protocol', 'disable_eq': True, ...}\n\n    @staticmethod\n    def get_protocol_equipments_ids(data):\n        equipment_ids = []\n    \n>       for entry in data[\"protocol_eq\"][\"result\"]:\nE       KeyError: 'protocol_eq'\n\ntests\\unit\\protocols\\protocol_common_method.py:166: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1733032383935,"stop":1733032384226,"duration":291},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733032384226,"stop":1733032384407,"duration":181},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"validate_bioburden_residue_swab_rinse_limits_absent_zero_split_inspection_room_grade"},{"name":"tag","value":"formulation"},{"name":"tag","value":"microbial_multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.multi_production_protocol.protocol"},{"name":"suite","value":"test_multi_production_protocol_microbial_policy_absent"},{"name":"subSuite","value":"TestMicrobialMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"25152-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cuw1eak","url":"https://app.clickup.com/t/86cuw1eak","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["scenario","formulation","validate_bioburden_residue_swab_rinse_limits_absent_zero_split_inspection_room_grade","microbial_multi_production_protocol"]},"source":"7b8e1a9f41e3e212.json","parameterValues":[]}