{"uid":"a2f9452c7c607ce4","name":"Validate the audit logs details for when submit offline study for review and approve","fullName":"tests.scenarios.audit_logs.test_audit_logs_scenarios.TestAuditLogsScenarios#test_validate_submited_offline_study_audit_logs_details","historyId":"0938edda6e82db7259c28c09f65b75fb","time":{"start":1733044601689,"stop":1733044601974,"duration":285},"description":"This test case test API to validate the audit logs details for when update offline study for review and approve","descriptionHtml":"<p>This test case test API to validate the audit logs details for when update offline study for review and approve</p>\n","status":"broken","statusMessage":"TypeError: can only concatenate str (not \"NoneType\") to str","statusTrace":"self = <test_audit_logs_scenarios.TestAuditLogsScenarios object at 0x00000251CFD94F90>\n\n    @allure.title(\"Validate the audit logs details for when submit offline study for review and approve\")\n    @allure.description(\"This test case test API to validate the audit logs details for when update offline study for \"\n                        \"review and approve\")\n    @allure.link(\"https://app.clickup.com/t/86cw11xgd\")\n    @pytest.mark.validate_submited_offline_study_audit_logs_details\n    def test_validate_submited_offline_study_audit_logs_details(self):\n        data = {\"study_name\": \"Offline Study \" + generate_random_name(), \"study_id\": None,\n                \"offline_id\": \"Off-id-\" + generate_random_name(),\n                \"offline_proto\": \"Pro-\" + generate_random_name(), \"study_type\": \"periodicVerification\",\n                \"residue_type\": \"Active\", \"max_observe_size\": 2, \"unit\": \"mg/sqcm\"}\n        self.offline_study.test_add_new_offline_study(data)\n    \n>       self.offline_study.test_update_offline_study_details(data)\n\ntests\\scenarios\\audit_logs\\test_audit_logs_scenarios.py:1967: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\unit\\offline_study\\test_offline_study.py:532: in test_update_offline_study_details\n    update_offline_payload = self.get_update_details_to_offline_study_payload(data)\ntests\\unit\\offline_study\\test_offline_study.py:383: in get_update_details_to_offline_study_payload\n    return add_details_offline_study(study_name, study_id, proto_id, hs_id, eq_id, material_id, pr_ids,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nstudy_name = None, study_id = None, proto_id = 'Proto-145', hs_id = None, eq_id = 27, material_id = 'effac2c5-d83f-4171-a203-e69ed413c6a3', pr_ids = 44, material_type = 'api'\npdf_file = ('offline_2.pdf', <_io.BufferedReader name='test_data/data/offline_pdf/offline_2.pdf'>, 'text/plain')\n\n    def add_details_offline_study(study_name, study_id, proto_id, hs_id, eq_id, material_id, pr_ids, material_type,\n                                  pdf_file):\n        name_length = 15\n        random_id = ''.join(random.choices(string.ascii_lowercase + string.digits, k=name_length))\n        payload = {\n            \"studyName\": study_name,\n            \"studyId\": study_id,\n            \"protocolId\": proto_id,\n            \"dateOfApproval\": str(study_time_zone()[\"iso_time_zone\"]),\n>           \"reason\": \"Updating \" + study_name,\n            \"hsEqMatMapping\": json.dumps([{\n                \"hsId\": hs_id,\n                \"eqId\": eq_id,\n                \"materialId\": material_id,\n                \"prIds\": [pr_ids],\n                \"materialType\": material_type,\n            }]),\n            random_id: pdf_file\n        }\nE       TypeError: can only concatenate str (not \"NoneType\") to str\n\npayload\\facility\\offline_study\\update_offline_study.py:40: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1733038443170,"stop":1733038443648,"duration":478},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733038443648,"stop":1733038443948,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"validate_submited_offline_study_audit_logs_details"},{"name":"tag","value":"run(order=-2)"},{"name":"tag","value":"second_to_last"},{"name":"tag","value":"audit_logs_scenarios"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.audit_logs"},{"name":"suite","value":"test_audit_logs_scenarios"},{"name":"subSuite","value":"TestAuditLogsScenarios"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"25196-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.audit_logs.test_audit_logs_scenarios"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cw11xgd","url":"https://app.clickup.com/t/86cw11xgd","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["validate_submited_offline_study_audit_logs_details","scenario","audit_logs_scenarios","second_to_last","run(order=-2)"]},"source":"a2f9452c7c607ce4.json","parameterValues":[]}