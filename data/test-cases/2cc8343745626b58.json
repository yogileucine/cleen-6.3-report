{"uid":"2cc8343745626b58","name":"Residue Type Cleaning Agent select have unit mg/sqcm","fullName":"tests.scenarios.offline_study.test_offline_studys.TestOfflineStudies#test_cleaning_agent_select_unit_mg_sqcm","historyId":"84e2691d104c63f89edf9e9296505d5e","time":{"start":1733044422826,"stop":1733044422909,"duration":83},"description":"This testcase test Api to test that when residue type select is Cleaning Agent then its unit should be mg/sqcm","descriptionHtml":"<p>This testcase test Api to test that when residue type select is Cleaning Agent then its unit should be mg/sqcm</p>\n","status":"broken","statusMessage":"TypeError: can only concatenate str (not \"NoneType\") to str","statusTrace":"self = <test_offline_studys.TestOfflineStudies object at 0x00000251D10EEFD0>\n\n    @allure.title(\"Residue Type Cleaning Agent select have unit mg/sqcm\")\n    @allure.description(\"This testcase test Api to test that when residue type select is Cleaning Agent then its unit \"\n                        \"should be mg/sqcm\")\n    @allure.link(\"https://app.clickup.com/t/85zrvmxcc\")\n    @pytest.mark.cleaning_agent_select_unit_mg_sqcm\n    def test_cleaning_agent_select_unit_mg_sqcm(self):\n        global RESIDUE_MAPPING, CLEANING_AGENT\n        data = {}\n        max_observe_size = unit_data.OFFLINE_STUDY[\"observe_value\"]\n    \n        update_data = {\"study_name\": \"Test Offline Study\", \"residue_type\": \"Cleaning Agent\",\n                       \"target_residue\": \"Sodium Nitrite\", \"study_id\": None, \"max_observe_size\": max_observe_size,\n                       self.intermediate_key: \"intermediate\"}\n        data.update({\"residue_type\": update_data[\"residue_type\"], \"target_residue\": update_data[\"target_residue\"],\n                     \"study_id\": update_data[\"study_id\"], \"max_observe_size\": update_data[\"max_observe_size\"],\n                     \"study_name\": update_data[\"study_name\"], \"inter_residue\": update_data[self.intermediate_key]})\n    \n>       self.offline_studies.test_add_details_to_offline_study(data)\n\ntests\\scenarios\\offline_study\\test_offline_studys.py:252: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\unit\\offline_study\\test_offline_study.py:502: in test_add_details_to_offline_study\n    payload = self.get_add_offline_study_payload(data)\ntests\\unit\\offline_study\\test_offline_study.py:360: in get_add_offline_study_payload\n    return add_details_offline_study(study_name, study_id, proto_id, hs_id, eq_id, material_id, pr_ids,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nstudy_name = None, study_id = None, proto_id = None, hs_id = None, eq_id = 30, material_id = 'effac2c5-d83f-4171-a203-e69ed413c6a3', pr_ids = 44, material_type = 'api'\npdf_file = ('offline_1.pdf', <_io.BufferedReader name='test_data/data/offline_pdf/offline_1.pdf'>, 'text/plain')\n\n    def add_details_offline_study(study_name, study_id, proto_id, hs_id, eq_id, material_id, pr_ids, material_type,\n                                  pdf_file):\n        name_length = 15\n        random_id = ''.join(random.choices(string.ascii_lowercase + string.digits, k=name_length))\n        payload = {\n            \"studyName\": study_name,\n            \"studyId\": study_id,\n            \"protocolId\": proto_id,\n            \"dateOfApproval\": str(study_time_zone()[\"iso_time_zone\"]),\n>           \"reason\": \"Updating \" + study_name,\n            \"hsEqMatMapping\": json.dumps([{\n                \"hsId\": hs_id,\n                \"eqId\": eq_id,\n                \"materialId\": material_id,\n                \"prIds\": [pr_ids],\n                \"materialType\": material_type,\n            }]),\n            random_id: pdf_file\n        }\nE       TypeError: can only concatenate str (not \"NoneType\") to str\n\npayload\\facility\\offline_study\\update_offline_study.py:40: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1733038443170,"stop":1733038443648,"duration":478},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733038443648,"stop":1733038443948,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"cleaning_agent_select_unit_mg_sqcm"},{"name":"tag","value":"update_offline_studies"},{"name":"parentSuite","value":"tests.scenarios.offline_study"},{"name":"suite","value":"test_offline_studys"},{"name":"subSuite","value":"TestOfflineStudies"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"25196-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.offline_study.test_offline_studys"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85zrvmxcc","url":"https://app.clickup.com/t/85zrvmxcc","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f7ad4829aaa1fe72","status":"broken","statusDetails":"TypeError: can only concatenate str (not \"NoneType\") to str","time":{"start":1732985007395,"stop":1732985007489,"duration":94}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["cleaning_agent_select_unit_mg_sqcm","update_offline_studies"]},"source":"2cc8343745626b58.json","parameterValues":[]}