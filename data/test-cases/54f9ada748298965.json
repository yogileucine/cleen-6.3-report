{"uid":"54f9ada748298965","name":"Validate the sample limits of Bioburden Endotoxin residue verification for when room grade value is zero for rinse samples non split","fullName":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol#test_bioburden_endotoxin_protocol_rinse_absent_zero_non_split_room_grade","historyId":"286c2df6f3ce3e6427bf89f4eb31cca4","time":{"start":1732984180707,"stop":1732984182921,"duration":2214},"description":"This test case tests API to Validate the sample limits of Bioburden Endotoxin residue verification for when room grade value is zero for rinse samples non split","descriptionHtml":"<p>This test case tests API to Validate the sample limits of Bioburden Endotoxin residue verification for when room grade value is zero for rinse samples non split</p>\n","status":"failed","statusMessage":"AssertionError: {\"error\":{\"errName\":\"NothingToChangeError\",\"where\":{\"domain\":\"RoomGrades\",\"action\":\"Modify\"},\"name\":\"Nothing to change\",\"message\":\"No changes have been made from the current values. Please check all fields and try again.\",\"action\":\"Modify\",\"domain\":\"RoomGrades\"}}","statusTrace":"self = <test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol object at 0x000001CD084DBAD0>\n\n    @allure.title(\"Validate the sample limits of Bioburden Endotoxin residue verification for when room grade value \"\n                  \"is zero for rinse samples non split\")\n    @allure.description(\"This test case tests API to Validate the sample limits of Bioburden Endotoxin residue \"\n                        \"verification for when room grade value is zero for rinse samples non split\")\n    @allure.link(\"https://app.clickup.com/t/86cuw0bkh\")\n    @pytest.mark.formulation\n    @pytest.mark.bioburden_endotoxin_protocol_rinse_absent_zero_non_split_room_grade\n    def test_bioburden_endotoxin_protocol_rinse_absent_zero_non_split_room_grade(self):\n>       policy, data = self.protocol_bioburden_room_grade_helper()\n\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:1577: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:423: in protocol_bioburden_room_grade_helper\n    self.setup_microbial_policy_non_split_room_grade()\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:374: in setup_microbial_policy_non_split_room_grade\n    self.update_room_grade_microbial_policy()\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:369: in update_room_grade_microbial_policy\n    self.room_grade_master_data.test_update_room_grade_master_data_details(room_data)\ntests\\unit\\master_data\\test_room_grade_master_data.py:75: in test_update_room_grade_master_data_details\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [400]>\n\n    def status_200(response):\n>       assert response.status_code == 200, response.text\nE       AssertionError: {\"error\":{\"errName\":\"NothingToChangeError\",\"where\":{\"domain\":\"RoomGrades\",\"action\":\"Modify\"},\"name\":\"Nothing to change\",\"message\":\"No changes have been made from the current values. Please check all fields and try again.\",\"action\":\"Modify\",\"domain\":\"RoomGrades\"}}\n\nutil\\validate_response.py:3: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1732974915848,"stop":1732974916198,"duration":350},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1732974916198,"stop":1732974916326,"duration":128},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"bioburden_endotoxin_protocol_rinse_absent_zero_non_split_room_grade"},{"name":"tag","value":"formulation"},{"name":"tag","value":"microbial_multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.multi_production_protocol.protocol"},{"name":"suite","value":"test_multi_production_protocol_microbial_policy_absent"},{"name":"subSuite","value":"TestMicrobialMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"22492-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cuw0bkh","url":"https://app.clickup.com/t/86cuw0bkh","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["bioburden_endotoxin_protocol_rinse_absent_zero_non_split_room_grade","scenario","formulation","microbial_multi_production_protocol"]},"source":"54f9ada748298965.json","parameterValues":[]}