{"uid":"daa2a41fbee58e71","name":"Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when select zero in microbial policy for room grade rinse & split","fullName":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol#test_validate_bioburden_residue_rinse_limits_absent_zero_split_inspection_room_grade","historyId":"e7b991fc21516bd6a9e603571c2e89f2","time":{"start":1733034356646,"stop":1733034365537,"duration":8891},"description":"This test case tests API to Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when select zero in microbial policy for room grade rinse & split","descriptionHtml":"<p>This test case tests API to Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when select zero in microbial policy for room grade rinse &amp; split</p>\n","status":"broken","statusMessage":"KeyError: 'protocol_eq'","statusTrace":"self = <test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol object at 0x000002CC38034B90>\n\n    @allure.title(\"Validate the absent on sample limits of Inspection bioburden Endotoxin residue verification when \"\n                  \"select zero in microbial policy for room grade rinse & split\")\n    @allure.description(\n        \"This test case tests API to Validate the absent on sample limits of Inspection bioburden Endotoxin \"\n        \"residue verification when select zero in microbial policy for room grade rinse & split\")\n    @allure.link(\"https://app.clickup.com/t/86cuw1cw1\")\n    @pytest.mark.formulation\n    @pytest.mark.validate_bioburden_residue_rinse_limits_absent_zero_split_inspection_room_grade\n    def test_validate_bioburden_residue_rinse_limits_absent_zero_split_inspection_room_grade(self):\n>       protocol = self.test_validate_bioburden_endotoxin_residue_rinse_sample_limits_summary_absent_zero_split_room_grade()\n\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:2015: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:1979: in test_validate_bioburden_endotoxin_residue_rinse_sample_limits_summary_absent_zero_split_room_grade\n    data = self.test_bioburden_endotoxin_absent_zero_rinse_split_room_grade()\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:1924: in test_bioburden_endotoxin_absent_zero_rinse_split_room_grade\n    equipments_id = self.protocol_common_method.get_protocol_equipments_ids(data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = {'add_new_protocol_payload': {'authorId': 6, 'description': 'Automation Protocol', 'externalId': 'Protocol-AN6Z', 'nam...AN6Z', ...}, 'bioburden_verification': True, 'description': 'Automation Protocol', 'endotoxin_verification': True, ...}\n\n    def get_protocol_equipments_ids(data):\n        equipment_ids = []\n    \n        for entry in data[\"protocol_eq\"][\"result\"]:\n>           if entry[\"type\"] == \"equipment\":\nE           KeyError: 'protocol_eq'\n\ntests\\unit\\protocols\\protocol_common_method.py:166: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1733033467023,"stop":1733033467259,"duration":236},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733033467259,"stop":1733033467365,"duration":106},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"validate_bioburden_residue_rinse_limits_absent_zero_split_inspection_room_grade"},{"name":"tag","value":"formulation"},{"name":"tag","value":"microbial_multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.multi_production_protocol.protocol"},{"name":"suite","value":"test_multi_production_protocol_microbial_policy_absent"},{"name":"subSuite","value":"TestMicrobialMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"8352-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cuw1cw1","url":"https://app.clickup.com/t/86cuw1cw1","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["scenario","formulation","validate_bioburden_residue_rinse_limits_absent_zero_split_inspection_room_grade","microbial_multi_production_protocol"]},"source":"daa2a41fbee58e71.json","parameterValues":[]}