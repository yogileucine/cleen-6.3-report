{"uid":"4993147200080bfa","name":"Validate the absent on sample limits of Inspection Endotoxin residue verification when select zero in microbial policy","fullName":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol#test_validate_endotoxin_residue_limits_absent_zero_inspection","historyId":"46c9ac8792fe11cf76dd10f658634aa4","time":{"start":1733034873537,"stop":1733034879932,"duration":6395},"description":"This test case tests API to Validate the absent on sample limits of Inspection Endotoxin residue verification when select zero in microbial policy","descriptionHtml":"<p>This test case tests API to Validate the absent on sample limits of Inspection Endotoxin residue verification when select zero in microbial policy</p>\n","status":"broken","statusMessage":"KeyError: 'protocol_eq'","statusTrace":"self = <test_multi_production_protocol_microbial_policy_absent.TestMicrobialMultiProductionProtocol object at 0x00000127FE0FDE10>\n\n    @allure.title(\"Validate the absent on sample limits of Inspection Endotoxin residue verification when select zero \"\n                  \"in microbial policy\")\n    @allure.description(\"This test case tests API to Validate the absent on sample limits of Inspection Endotoxin \"\n                        \"residue verification when select zero in microbial policy\")\n    @allure.link(\"https://app.clickup.com/t/86cuugeew\")\n    @pytest.mark.formulation  # bop = based on policy\n    @pytest.mark.validate_endotoxin_residue_limits_absent_zero_inspection\n    def test_validate_endotoxin_residue_limits_absent_zero_inspection(self):\n>       protocol = self.test_validate_endotoxin_residue_sample_limits_absent_zero()\n\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:1301: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:848: in test_validate_endotoxin_residue_sample_limits_absent_zero\n    data = self.test_endotoxin_protocol_absent_zero()\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:508: in test_endotoxin_protocol_absent_zero\n    data, updated_data = self.protocol_endotoxin_helper(policy_data)\ntests\\scenarios\\multi_production_protocol\\protocol\\test_multi_production_protocol_microbial_policy_absent.py:143: in protocol_endotoxin_helper\n    equipments_id = self.protocol_common_method.get_protocol_equipments_ids(data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = {'add_new_protocol_payload': {'authorId': 6, 'description': 'Automation Protocol', 'externalId': 'Protocol-ZNJ2', 'nam......}, 'description': 'Automation Protocol', 'endotoxin_verification': True, 'production': ['PRD1-P2', 'PRD1-P36'], ...}\n\n    @staticmethod\n    def get_protocol_equipments_ids(data):\n        equipment_ids = []\n    \n>       for entry in data[\"protocol_eq\"][\"result\"]:\nE       KeyError: 'protocol_eq'\n\ntests\\unit\\protocols\\protocol_common_method.py:165: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login","time":{"start":1733034873091,"stop":1733034873409,"duration":318},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733034873409,"stop":1733034873532,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"validate_endotoxin_residue_limits_absent_zero_inspection"},{"name":"tag","value":"formulation"},{"name":"tag","value":"microbial_multi_production_protocol"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.multi_production_protocol.protocol"},{"name":"suite","value":"test_multi_production_protocol_microbial_policy_absent"},{"name":"subSuite","value":"TestMicrobialMultiProductionProtocol"},{"name":"host","value":"DESKTOP-ESU2KLG"},{"name":"thread","value":"16092-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.multi_production_protocol.protocol.test_multi_production_protocol_microbial_policy_absent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cuugeew","url":"https://app.clickup.com/t/86cuugeew","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["validate_endotoxin_residue_limits_absent_zero_inspection","scenario","formulation","microbial_multi_production_protocol"]},"source":"4993147200080bfa.json","parameterValues":[]}